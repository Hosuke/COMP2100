/*
 * Copyright (c) 2000-2002, Shayne R Flint
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *    * The name of the author may not be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * ./armidale/api/gui/TableData.java
 * Generated by armidale.utilities.makeclass.Main armidale v0.9.5 on 10Apr2002 at 17:58:33
 *
 */

package armidale.api.gui;
  /**
   *
   * @author  generated by <tt>armidale.utilities.makeclass.Main</tt> on 10Apr2002 at 17:58:33
   * @version armidale v0.9.5
   */

  import armidale.api.ArmidaleObject;

public interface TableData extends ArmidaleObject {

  // callback
  //

  /**
   * Registers a callback with this TableData
   *
   * @param  callback callback to be added
   *
   */
  public void addTableDataCallback(TableDataCallback callback);

  /**
   * Removes a callback registered with this TableData
   *
   * @param  callback callback to be removed
   */
  public void removeTableDataCallback(TableDataCallback callback);

  /**
   * Removes all callbacks registered with this TableData
   *
   */
  public void removeAllTableDataCallbacks();

  /**
   * Returns the list of callbacks registered with this TableData
   *
   * @return list of callbacks registered with this object
   */
  public TableDataCallbackList getTableDataCallbackList();

  // other methods
  //

  /**
   * Sets the number of columns in the table of Items associated with this 
   * TableData
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param count number of columns in the table of Items
   */
  public void setItemColumnCount(int count);

  /**
   * Sets the number of rows in the table of Items associated with this 
   * TableData
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param count number of rows in the table of Items
   */
  public void setItemRowCount(int count);

  /**
   * Replaces the ArmidaleObject at a specified row and column in the table of 
   * Items associated with this TableData
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param row row of the ArmidaleObject to be replaced
   * @param column column of the ArmidaleObject to be replaced
   * @param armidaleObject ArmidaleObject to be put into table
   */
  public void setItem(int row, int column, ArmidaleObject armidaleObject);

  /**
   * Replaces the ArmidaleObjects at a specified column in a specified set of 
   * rows with copies of a specified ArmidaleObject.
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param firstRow firstRow of the ArmidaleObject to be replaced
   * @param rowCount number of rows to be modified
   * @param column column of the ArmidaleObject to be replaced
   * @param armidaleObject ArmidaleObject to be put into table
   */
  public void setItem(int firstRow, int rowCount, int column, ArmidaleObject armidaleObject);

  /**
   * Replaces a specified row in the table of Items associated with this 
   * TableData
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param row row to be replaced
   * @param armidaleObjects row of ArmidaleObjects to be put into table
   */
  public void setItemRow(int row, ArmidaleObject[] armidaleObjects);

  /**
   * Replaces a specified number of rows in the table of Items associated with 
   * this TableData with copies of a specified row
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param row first row of ArmidaleObjects to be replaced
   * @param count number of rows to be replaced
   * @param armidaleObjects row of ArmidaleObjects to be copied into table
   */
  public void setItemRow(int row, int count, ArmidaleObject[] armidaleObjects);

  /**
   * Inserts a specified row into the table of Items associated with this 
   * TableData. Moves all subsequent rows down (adds one to their row indices)
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param row row index at which the row of ArmidaleObjects to be inserted
   * @param armidaleObjects row of the ArmidaleObjects to be inserted
   */
  public void insertItemRow(int row, ArmidaleObject[] armidaleObjects);

  /**
   * Removes a specified row from the table of Items associated with this 
   * TableData. Moves all subsequent rows up (subtracts one from their row 
   * indices)
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param row row to be removed
   */
  public void removeItemRow(int row);

  /**
   * Removes a specified number of rows from the table of Items associated with 
   * this TableData. Moves all subsequent rows up (subtracts 'count' from their 
   * row indices)
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param row first row to be removed
   * @param count number of rows to be removed
   */
  public void removeItemRows(int row, int count);

  /**
   * Removes all rows from the table of Items associated with this TableData
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   */
  public void removeAllItemRows();

  /**
   * Sets the title of a specified column in the table of Items associated with 
   * this TableData
   * <p>
   * @see #setItemColumnCount
   * @see #setItemRowCount
   * @see #setItem
   * @see #setItemRow
   * @see #insertItemRow
   * @see #removeItemRow
   * @see #removeItemRows
   * @see #removeAllItemRows
   * @see #setItemColumnTitle
   *
   * @param column column to be re-titled
   * @param title new column title
   */
  public void setItemColumnTitle(int column, String title);
}
