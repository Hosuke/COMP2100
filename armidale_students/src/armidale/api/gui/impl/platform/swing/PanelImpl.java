/*
 * Copyright (c) 2000-2002, Shayne R Flint
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *    * The name of the author may not be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * ./armidale/api/gui/impl/platform/swing/PanelImpl.java
 * Generated by armidale.utilities.makeclass.Main armidale v0.9.5 on 10Apr2002 at 17:58:06
 *
 */

package armidale.api.gui.impl.platform.swing;

  import armidale.api.context.*;
  import armidale.api.gui.Color;
  import armidale.api.gui.Panel;
  import armidale.api.gui.constants.EdgeStyle;
  import armidale.api.gui.impl.platform.swing.WidgetImpl;
  //--ARM-- imports
  import java.awt.Component;
  import java.awt.Container;
  import javax.swing.BorderFactory;
  import javax.swing.border.TitledBorder;
  import javax.swing.JPanel;
  //--ARM-- imports

public abstract class PanelImpl extends WidgetImpl implements Panel {

  //--ARM-- declarations
  String title     = null;
  int    edgeStyle = NONE;
  Color  edgeColor = Color.BLACK;
  
  protected void updateBorder() {
    switch (edgeStyle) {
      case NONE:
        ((JPanel)peer).setBorder(null);
        break;
      case RAISED:
        ((JPanel)peer).setBorder(new TitledBorder(BorderFactory.createRaisedBevelBorder(), title));
        break;
      case INDENTED:
        ((JPanel)peer).setBorder(new TitledBorder(BorderFactory.createLoweredBevelBorder(), title));
        break;
      case ETCHED:
        ((JPanel)peer).setBorder(new TitledBorder(BorderFactory.createEtchedBorder(), title));
        break;
      case LINE:
        ((JPanel)peer).setBorder(new TitledBorder(BorderFactory.createLineBorder(Conversions.awtColor(edgeColor)), title));
        break;
      default:
        ((JPanel)peer).setBorder(null);
        break;
    }
  }
  //--ARM-- declarations

  public PanelImpl() {
    //--ARM-- constructor()
    //--ARM-- constructor()
    setTitle(DEFAULT_TITLE);
    setEdgeStyle(DEFAULT_EDGESTYLE);
    setEdgeColor(DEFAULT_EDGECOLOR);
    //--ARM-- constructor() - end
    //--ARM-- constructor() - end
  }

  protected void setPeer() {
    //--ARM-- setPeer()
    //--ARM-- setPeer()
  }

  // set/get/is methods
  //

  public String getTitle() {
    //--ARM-- public String getTitle()
    return title;
    //--ARM-- public String getTitle()
  }

  public void setTitle(String title) {
    //--ARM-- public void setTitle(String title)
    this.title = title;
    updateBorder();
    //--ARM-- public void setTitle(String title)
  }

  public int getEdgeStyle() {
    //--ARM-- public int getEdgeStyle()
    return edgeStyle;
    //--ARM-- public int getEdgeStyle()
  }

  public void setEdgeStyle(int edgeStyle) {
    //--ARM-- public void setEdgeStyle(int edgeStyle)
    this.edgeStyle = edgeStyle;
    updateBorder();
    //--ARM-- public void setEdgeStyle(int edgeStyle)
  }

  public Color getEdgeColor() {
    //--ARM-- public Color getEdgeColor()
    return edgeColor;
    //--ARM-- public Color getEdgeColor()
  }

  public void setEdgeColor(Color edgeColor) {
    //--ARM-- public void setEdgeColor(Color edgeColor)
    this.edgeColor = edgeColor;
    updateBorder();
    //--ARM-- public void setEdgeColor(Color edgeColor)
  }
}
