/*
 * Copyright (c) 2000-2002, Shayne R Flint
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *    * The name of the author may not be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * ./armidale/api/gui/impl/clientserver/LabeledWidgetServerImpl.java
 * Generated by armidale.utilities.makeclass.Main armidale v0.9.5 on 10Apr2002 at 17:58:03
 *
 */

package armidale.api.gui.impl.clientserver;

  import armidale.api.context.clientserver.*;
  import armidale.api.gui.Image;
  import armidale.api.gui.LabeledWidgetFactory;
  import armidale.api.gui.Widget;
  import armidale.api.gui.constants.Compass;
  import java.io.IOException;

public class LabeledWidgetServerImpl extends PanelServerImpl implements LabeledWidgetClientServerIds {

  // readable attributes
  //
  protected Image image;
  protected String text = DEFAULT_TEXT;
  protected Widget widget;
  protected int textImageAlignment = DEFAULT_TEXTIMAGEALIGNMENT;
  protected int textImageGap = DEFAULT_TEXTIMAGEGAP;
  protected int labelWidgetAlignment = DEFAULT_LABELWIDGETALIGNMENT;
  protected int labelWidgetGap = DEFAULT_LABELWIDGETGAP;

  // constructor
  //
  public LabeledWidgetServerImpl(ServerContext context) {
    super(context);
  }

  // Class ID
  //
  public int getClassId() {
    return LabeledWidgetFactory.CLASS_ID;
  }

  // attribute set/get/is methods
  //

  public Image getImage() {
    return image;
  }

  public void setImage(Image image) {
    this.image = image;
    Message msg = new SetAttributeMessage(this.getId(), imageId);
    msg.writeObjectId((MessagingObject)image);
    transport.writeMessage(msg);
  }

  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
    Message msg = new SetAttributeMessage(this.getId(), textId);
    msg.writeString(text);
    transport.writeMessage(msg);
  }

  public Widget getWidget() {
    return widget;
  }

  public void setWidget(Widget widget) {
    this.widget = widget;
    Message msg = new SetAttributeMessage(this.getId(), widgetId);
    msg.writeObjectId((MessagingObject)widget);
    transport.writeMessage(msg);
  }

  public int getTextImageAlignment() {
    return textImageAlignment;
  }

  public void setTextImageAlignment(int textImageAlignment) {
    this.textImageAlignment = textImageAlignment;
    Message msg = new SetAttributeMessage(this.getId(), textImageAlignmentId);
    msg.writeInt(textImageAlignment);
    transport.writeMessage(msg);
  }

  public int getTextImageGap() {
    return textImageGap;
  }

  public void setTextImageGap(int textImageGap) {
    this.textImageGap = textImageGap;
    Message msg = new SetAttributeMessage(this.getId(), textImageGapId);
    msg.writeInt(textImageGap);
    transport.writeMessage(msg);
  }

  public int getLabelWidgetAlignment() {
    return labelWidgetAlignment;
  }

  public void setLabelWidgetAlignment(int labelWidgetAlignment) {
    this.labelWidgetAlignment = labelWidgetAlignment;
    Message msg = new SetAttributeMessage(this.getId(), labelWidgetAlignmentId);
    msg.writeInt(labelWidgetAlignment);
    transport.writeMessage(msg);
  }

  public int getLabelWidgetGap() {
    return labelWidgetGap;
  }

  public void setLabelWidgetGap(int labelWidgetGap) {
    this.labelWidgetGap = labelWidgetGap;
    Message msg = new SetAttributeMessage(this.getId(), labelWidgetGapId);
    msg.writeInt(labelWidgetGap);
    transport.writeMessage(msg);
  }

}
