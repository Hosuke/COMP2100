/*
 * Copyright (c) 2000-2002, Shayne R Flint
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *    * The name of the author may not be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * ./armidale/api/gui/impl/clientserver/GridPanelWidgetServerImpl.java
 * Generated by armidale.utilities.makeclass.Main armidale v0.9.5 on 10Apr2002 at 17:58:30
 *
 */

package armidale.api.gui.impl.clientserver;

  import armidale.api.context.clientserver.*;
  import armidale.api.gui.GridPanelWidgetFactory;
  import armidale.api.gui.Insets;
  import armidale.api.gui.Widget;
  import armidale.api.gui.constants.Compass;
  import armidale.api.gui.constants.FillMode;
  import armidale.api.gui.constants.GridCell;
  import armidale.api.impl.clientserver.ArmidaleObjectServerImpl;
  import java.io.IOException;

public class GridPanelWidgetServerImpl extends ArmidaleObjectServerImpl implements GridPanelWidgetClientServerIds {

  // readable attributes
  //
  protected Widget widget;
  protected int gridX;
  protected int gridY;
  protected int gridWidth = DEFAULT_GRIDWIDTH;
  protected int gridHeight = DEFAULT_GRIDHEIGHT;
  protected float weightX = DEFAULT_WEIGHTX;
  protected float weightY = DEFAULT_WEIGHTY;
  protected int anchor = DEFAULT_ANCHOR;
  protected int fill = DEFAULT_FILL;
  protected Insets insets = DEFAULT_INSETS;
  protected int internalPadX = DEFAULT_INTERNALPADX;
  protected int internalPadY = DEFAULT_INTERNALPADY;

  // constructor
  //
  public GridPanelWidgetServerImpl(ServerContext context) {
    super(context);
  }

  // Class ID
  //
  public int getClassId() {
    return GridPanelWidgetFactory.CLASS_ID;
  }

  // attribute set/get/is methods
  //

  public Widget getWidget() {
    return widget;
  }

  public void setWidget(Widget widget) {
    this.widget = widget;
    Message msg = new SetAttributeMessage(this.getId(), widgetId);
    msg.writeObjectId((MessagingObject)widget);
    transport.writeMessage(msg);
  }

  public int getGridX() {
    return gridX;
  }

  public void setGridX(int gridX) {
    this.gridX = gridX;
    Message msg = new SetAttributeMessage(this.getId(), gridXId);
    msg.writeInt(gridX);
    transport.writeMessage(msg);
  }

  public int getGridY() {
    return gridY;
  }

  public void setGridY(int gridY) {
    this.gridY = gridY;
    Message msg = new SetAttributeMessage(this.getId(), gridYId);
    msg.writeInt(gridY);
    transport.writeMessage(msg);
  }

  public int getGridWidth() {
    return gridWidth;
  }

  public void setGridWidth(int gridWidth) {
    this.gridWidth = gridWidth;
    Message msg = new SetAttributeMessage(this.getId(), gridWidthId);
    msg.writeInt(gridWidth);
    transport.writeMessage(msg);
  }

  public int getGridHeight() {
    return gridHeight;
  }

  public void setGridHeight(int gridHeight) {
    this.gridHeight = gridHeight;
    Message msg = new SetAttributeMessage(this.getId(), gridHeightId);
    msg.writeInt(gridHeight);
    transport.writeMessage(msg);
  }

  public float getWeightX() {
    return weightX;
  }

  public void setWeightX(float weightX) {
    this.weightX = weightX;
    Message msg = new SetAttributeMessage(this.getId(), weightXId);
    msg.writeFloat(weightX);
    transport.writeMessage(msg);
  }

  public float getWeightY() {
    return weightY;
  }

  public void setWeightY(float weightY) {
    this.weightY = weightY;
    Message msg = new SetAttributeMessage(this.getId(), weightYId);
    msg.writeFloat(weightY);
    transport.writeMessage(msg);
  }

  public int getAnchor() {
    return anchor;
  }

  public void setAnchor(int anchor) {
    this.anchor = anchor;
    Message msg = new SetAttributeMessage(this.getId(), anchorId);
    msg.writeInt(anchor);
    transport.writeMessage(msg);
  }

  public int getFill() {
    return fill;
  }

  public void setFill(int fill) {
    this.fill = fill;
    Message msg = new SetAttributeMessage(this.getId(), fillId);
    msg.writeInt(fill);
    transport.writeMessage(msg);
  }

  public Insets getInsets() {
    return insets;
  }

  public void setInsets(Insets insets) {
    this.insets = insets;
    Message msg = new SetAttributeMessage(this.getId(), insetsId);
    msg.writeInsets(insets);
    transport.writeMessage(msg);
  }

  public int getInternalPadX() {
    return internalPadX;
  }

  public void setInternalPadX(int internalPadX) {
    this.internalPadX = internalPadX;
    Message msg = new SetAttributeMessage(this.getId(), internalPadXId);
    msg.writeInt(internalPadX);
    transport.writeMessage(msg);
  }

  public int getInternalPadY() {
    return internalPadY;
  }

  public void setInternalPadY(int internalPadY) {
    this.internalPadY = internalPadY;
    Message msg = new SetAttributeMessage(this.getId(), internalPadYId);
    msg.writeInt(internalPadY);
    transport.writeMessage(msg);
  }

}
