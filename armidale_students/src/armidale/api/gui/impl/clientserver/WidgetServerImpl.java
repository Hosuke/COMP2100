/*
 * Copyright (c) 2000-2002, Shayne R Flint
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *    * The name of the author may not be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * ./armidale/api/gui/impl/clientserver/WidgetServerImpl.java
 * Generated by armidale.utilities.makeclass.Main armidale v0.9.5 on 10Apr2002 at 17:57:48
 *
 */

package armidale.api.gui.impl.clientserver;

  import armidale.api.context.clientserver.*;
  import armidale.api.gui.Size;
  import java.io.IOException;

public abstract class WidgetServerImpl extends ComponentServerImpl implements WidgetClientServerIds {

  // readable attributes
  //
  protected float alignmentX = DEFAULT_ALIGNMENTX;
  protected float alignmentY = DEFAULT_ALIGNMENTY;

  // constructor
  //
  public WidgetServerImpl(ServerContext context) {
    super(context);
  }

  // attribute set/get/is methods
  //

  public void setPreferredSize(Size preferredSize) {
    Message msg = new SetAttributeMessage(this.getId(), preferredSizeId);
    msg.writeSize(preferredSize);
    transport.writeMessage(msg);
  }

  public void setMinimumSize(Size minimumSize) {
    Message msg = new SetAttributeMessage(this.getId(), minimumSizeId);
    msg.writeSize(minimumSize);
    transport.writeMessage(msg);
  }

  public void setMaximumSize(Size maximumSize) {
    Message msg = new SetAttributeMessage(this.getId(), maximumSizeId);
    msg.writeSize(maximumSize);
    transport.writeMessage(msg);
  }

  public float getAlignmentX() {
    return alignmentX;
  }

  public void setAlignmentX(float alignmentX) {
    this.alignmentX = alignmentX;
    Message msg = new SetAttributeMessage(this.getId(), alignmentXId);
    msg.writeFloat(alignmentX);
    transport.writeMessage(msg);
  }

  public float getAlignmentY() {
    return alignmentY;
  }

  public void setAlignmentY(float alignmentY) {
    this.alignmentY = alignmentY;
    Message msg = new SetAttributeMessage(this.getId(), alignmentYId);
    msg.writeFloat(alignmentY);
    transport.writeMessage(msg);
  }

  // other methods
  //

  public void setSize(Size size) {
    Message msg = new MethodCallMessage(this.getId(), setSizeSizeId);
    msg.writeSize(size);
    transport.writeMessage(msg);
  }

}
