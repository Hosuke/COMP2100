/*
 * Copyright (c) 2000-2002, Shayne R Flint
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *    * The name of the author may not be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * ./armidale/api/gui/impl/clientserver/BoxPanelServerImpl.java
 * Generated by armidale.utilities.makeclass.Main armidale v0.9.5 on 10Apr2002 at 17:58:08
 *
 */

package armidale.api.gui.impl.clientserver;

  import armidale.api.context.clientserver.*;
  import armidale.api.gui.BoxPanelFactory;
  import armidale.api.gui.Size;
  import armidale.api.gui.Widget;
  import armidale.api.gui.constants.Orientation;
  import java.io.IOException;

public class BoxPanelServerImpl extends PanelServerImpl implements BoxPanelClientServerIds {

  // readable attributes
  //
  protected int orientation = DEFAULT_ORIENTATION;

  // constructor
  //
  public BoxPanelServerImpl(ServerContext context) {
    super(context);
  }

  // Class ID
  //
  public int getClassId() {
    return BoxPanelFactory.CLASS_ID;
  }

  // attribute set/get/is methods
  //

  public int getOrientation() {
    return orientation;
  }

  public void setOrientation(int orientation) {
    this.orientation = orientation;
    Message msg = new SetAttributeMessage(this.getId(), orientationId);
    msg.writeInt(orientation);
    transport.writeMessage(msg);
  }

  // other methods
  //

  public void addHorizontalSpring() {
    Message msg = new MethodCallMessage(this.getId(), addHorizontalSpringId);
    transport.writeMessage(msg);
  }

  public void addHorizontalStrut(int width) {
    Message msg = new MethodCallMessage(this.getId(), addHorizontalStrutIntId);
    msg.writeInt(width);
    transport.writeMessage(msg);
  }

  public void addVerticalSpring() {
    Message msg = new MethodCallMessage(this.getId(), addVerticalSpringId);
    transport.writeMessage(msg);
  }

  public void addVerticalStrut(int height) {
    Message msg = new MethodCallMessage(this.getId(), addVerticalStrutIntId);
    msg.writeInt(height);
    transport.writeMessage(msg);
  }

  public void addRigidArea(Size size) {
    Message msg = new MethodCallMessage(this.getId(), addRigidAreaSizeId);
    msg.writeSize(size);
    transport.writeMessage(msg);
  }

  public void addWidget(Widget widget) {
    Message msg = new MethodCallMessage(this.getId(), addWidgetWidgetId);
    msg.writeObjectId((MessagingObject)widget);
    transport.writeMessage(msg);
  }

  public void removeWidget(Widget widget) {
    Message msg = new MethodCallMessage(this.getId(), removeWidgetWidgetId);
    msg.writeObjectId((MessagingObject)widget);
    transport.writeMessage(msg);
  }

  public void removeAllWidgets() {
    Message msg = new MethodCallMessage(this.getId(), removeAllWidgetsId);
    transport.writeMessage(msg);
  }

}
