/*
 * Copyright (c) 2000-2002, Shayne R Flint
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *    * Redistributions of source code must retain the above copyright
 *      notice, this list of conditions and the following disclaimer.
 *
 *    * Redistributions in binary form must reproduce the above copyright
 *      notice, this list of conditions and the following disclaimer in the
 *      documentation and/or other materials provided with the distribution.
 *
 *    * The name of the author may not be used to endorse or promote products
 *      derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * ./armidale/api/gui/impl/clientserver/PanelClientImpl.java
 * Generated by armidale.utilities.makeclass.Main armidale v0.9.5 on 10Apr2002 at 17:58:06
 *
 */

package armidale.api.gui.impl.clientserver;

  import armidale.api.ImplementationException;
  import armidale.api.context.clientserver.*;
  import armidale.api.gui.Color;
  import armidale.api.gui.Panel;
  import armidale.api.gui.constants.EdgeStyle;

public abstract class PanelClientImpl extends WidgetClientImpl implements PanelClientServerIds {

  // constructor
  //
  public PanelClientImpl(ClientContext context, Panel peer) {
    super(context, peer);
  }

  // attribute set/get/is methods
  //

  public String getTitle() {
    throw new ImplementationException("attribute get/is methods are not supported in client context");
  }

  public void setTitle(String title) {
    ((Panel)peer).setTitle(title);
  }

  public int getEdgeStyle() {
    throw new ImplementationException("attribute get/is methods are not supported in client context");
  }

  public void setEdgeStyle(int edgeStyle) {
    ((Panel)peer).setEdgeStyle(edgeStyle);
  }

  public Color getEdgeColor() {
    throw new ImplementationException("attribute get/is methods are not supported in client context");
  }

  public void setEdgeColor(Color edgeColor) {
    ((Panel)peer).setEdgeColor(edgeColor);
  }

  public void handleSetAttribute(int attributeId, Message message) {
    int index;
    int first;
    int count;

    switch (attributeId) {
      case titleId:
        setTitle(message.readString());
        break;
      case edgeStyleId:
        setEdgeStyle(message.readInt());
        break;
      case edgeColorId:
        setEdgeColor(message.readColor());
        break;
      default:
        super.handleSetAttribute(attributeId, message);
    }
  }
}
